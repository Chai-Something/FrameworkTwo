####Declare loggers
# Sets the status level of the configuration to "error," which means that only log messages with the level "error" and above will be logged.
# Messages with lower levels, such as "info" or "debug," will not be logged.
status = error
# Assigns a name to the configuration, which could be referenced elsewhere in your Log4j configuration.
name= Log4j2PropertiesConfig
# Lists the appenders that are associated with this configuration. In this case, it includes two appenders
appenders=a_console
# Sets the log level of the root logger to "info." It determines the minimum log level that will be captured by the root logger.
# In this case, log messages at the "info" level or higher will be logged.
rootLogger.level=info
# Associates ar_console appender references with the root logger
rootLogger.appenderRefs = ar_console
# links the ar_console appender reference to an appender named StdoutAppender. This defines where the root logger will send its log messages.
rootLogger.appenderRef.ar_console.ref = StdoutAppender

####Console Logger
# specifies that the a_console appender is of type "Console," which means it logs messages to the console.
appender.a_console.type = Console
# Assigns a name to the console appender, which can be used in other parts of the configuration.
appender.a_console.name = StdoutAppender
# Specifies that the layout of the console appender should be of type "PatternLayout." PatternLayout allows you to define the format of log messages.
appender.a_console.layout.type = PatternLayout
# defines the pattern for formatting log messages. It includes placeholders like %d for timestamp, %t for thread name,
# %c{1} for the logger's name (limited to one character), and %msg for the log message itself.
appender.a_console.layout.pattern = [%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n
